/**
 *
 */
package org.confucius.commons.web.servlet.util;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.servlet.FilterConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletRequest;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.servlet.jsp.PageContext;

/**
 * {@link ContextUtil}
 *
 * @author <a href="mailto:mercyblitz@gmail.com">Mercy<a/>
 * @version 1.0.0
 * @see ContextUtil
 * @since 1.0.0 2016-02-29
 */
public class ContextUtil {

    /**
     * Create context attribute name for specified <code>object</code>
     *
     * @param object
     *         object
     * @return context attribute name
     * @throws NullPointerException
     *         if <code>object</code> == <code>null</code>
     */
    @Nonnull
    public static String createAttributeName(Object object) throws NullPointerException {
        return createAttributeName(object.getClass());
    }

    /**
     * Create context attribute name for specified <code>type</code>
     *
     * @param type
     *         {@link Class Type}
     * @return context attribute name
     * @throws NullPointerException
     *         if <code>type</code> == <code>null</code>
     */
    @Nonnull
    public static String createAttributeName(Class<?> type) {
        return type.getName().intern();
    }


    /**
     * Set specified <code>object</code> into {@link ServletContext} , the attribute name was generated by {@link
     * #createAttributeName(Object)} method.
     *
     * @param context
     *         ServletRequest
     * @param object
     *         object to be set into {link ServletContext}
     * @see #createAttributeName(Object)
     */
    public static void set(ServletContext context, Object object) {
        String attributeName = createAttributeName(object);
        context.setAttribute(attributeName, object);
    }

    /**
     * Set specified <code>object</code> into {@link HttpSession} , the attribute name was generated by {@link
     * #createAttributeName(Object)} method.
     *
     * @param session
     *         HttpSession
     * @param object
     *         object to be set into {link HttpSession}
     * @see #createAttributeName(Object)
     */
    public static void set(HttpSession session, Object object) {
        String attributeName = createAttributeName(object);
        session.setAttribute(attributeName, object);
    }

    /**
     * Set specified <code>object</code> into {@link ServletRequest} , the attribute name was generated by {@link
     * #createAttributeName(Object)} method.
     *
     * @param request
     *         ServletRequest
     * @param object
     *         object to be set into {link ServletRequest}
     */
    public static void set(ServletRequest request, Object object) {
        String attributeName = createAttributeName(object);
        request.setAttribute(attributeName, object);
    }

    /**
     * Set specified <code>object</code> into {@link PageContext} , the attribute name was generated by {@link
     * #createAttributeName(Object)} method.
     *
     * @param context
     *         PageContext
     * @param object
     *         object to be set into {link PageContext}
     */
    public static void set(PageContext context, Object object) {
        String attributeName = createAttributeName(object);
        context.setAttribute(attributeName, object);
    }

    /**
     * Get context object under {@link FilterConfig}
     *
     * @param filterConfig
     *         {@link FilterConfig}
     * @param attributeName
     *         attribute name
     * @param <T>
     *         the type of context object
     * @return context object
     */
    @Nullable
    public static <T> T getAttribute(FilterConfig filterConfig, String attributeName) {
        return getAttribute(filterConfig.getServletContext(), attributeName);
    }

    /**
     * Get context object under {@link ServletContext}
     *
     * @param servletContext
     *         {@link ServletContext}
     * @param attributeName
     *         attribute name
     * @param <T>
     *         the type of context object
     * @return context object
     */
    @Nullable
    public static <T> T getAttribute(ServletContext servletContext, String attributeName) {
        T value = (T) servletContext.getAttribute(attributeName);
        return value;
    }

    /**
     * Find context object under {@link HttpSession} , or {@link ServletContext}
     *
     * @param session
     *         {@link HttpSession}
     * @param attributeName
     *         attribute name
     * @param <T>
     *         the type of context object
     * @return context object
     */
    @Nullable
    public static <T> T findAttribute(HttpSession session, String attributeName) {

        T value = (T) session.getAttribute(attributeName);

        if (value == null) {
            return getAttribute(session.getServletContext(), attributeName);
        } else {
            return value;
        }

    }

    /**
     * Find context object under {@link HttpServletRequest} , or {@link HttpSession} , or {@link ServletContext}
     *
     * @param request
     *         {@link HttpServletRequest}
     * @param attributeName
     *         attribute name
     * @param <T>
     *         the type of context object
     * @return context object
     */
    @Nullable
    public static <T> T findAttribute(HttpServletRequest request, String attributeName) {
        T value = ServletRequestUtil.getAttribute(request, attributeName);
        if (value == null) {
            return findAttribute(request.getSession(), attributeName);
        } else {
            return value;
        }
    }

}
